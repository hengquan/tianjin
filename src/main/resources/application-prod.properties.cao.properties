## 基本配置
#服务端口
server.port=7001
#服务名称
spring.application.name=wa-inner-server
spring.application.name.cn=门户内网web子系统
##注册中心
# 服务注册中心节点
eureka.client.serviceUrl.defaultZone=http://admin:8888@10.220.50.11:8761/eureka/
# 心跳间隔，5秒
eureka.instance.lease-renewal-interval-in-seconds=5
# 没有心跳的淘汰时间，10秒
eureka.instance.lease-expiration-duration-in-seconds=10
# 定时刷新本地缓存时间
eureka.client.registry-fetch-interval-seconds=5
# 以ip的形式注册到注册中心
eureka.instance.prefer-ip-address=true
# 注册服务ip
eureka.instance.ip-address=10.220.50.15
## 远程调用配置
# 开启断路由
feign.hystrix.enabled=true
# ribbon远程配置缓存时间
ribbon.ServerListRefreshInterval=2000
# 路由请求连接的超时时间
ribbon.ConnectTimeout=1000
# 路由请求处理的超时时间
ribbon.ReadTimeout=5000
## 运行监控配置
management.endpoint.health.show-details=ALWAYS
management.endpoints.web.exposure.include=httptrace,health,metrics
## 单点登录配置
security.oauth2.resource.jwt.key-value=-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiSWC3BZ9Ntz1SOCnPuiPSXTpuM9TQt2VPS/jold+JC+dJzScZq0IS49aXqIR52kdWLEl6hNx2szyDcyqOfeDLuafAMbeDyyNy2GhGYmLigKt8fUiuEkrdzxWvMGgMf0wxNRNEuKW2EAsGwKZdp7IHoW+9tCGffERYKfqv7LYwjSCCiQOQpaTzTVIkI7rzWDMMWNYUZ4zJpJGfWvfsu1EiCVgPudIOvnJHi7z6o/1IJPAmZWX4U270xRLau9BndRPC+q94y3y0gH9nH+NlIPYoXQqkrircFgwOldCV3oYoBdMxouF4RLgDuQ0L+ZDjUq2d81N4YUx27nAlZ8+B7P97wIDAQAB-----END PUBLIC KEY-----

## 数据库配置

spring.datasource.url = jdbc:mysql://127.0.0.1:3306/test
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName = com.mysql.jdbc.Driver
#mybatis
mybatis.mapper-locations=classpath*:/mapper/*Mapper.xml
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#entity扫描的包名
mybatis.configuration.call-setters-on-nulls=true
mybatis.type-aliases-package=cn.tianjin.unifiedfee.wa.innerweb.entity

# 连接池的配置信息
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


## freemarker配置
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.cache=true
spring.freemarker.charset=UTF-8
spring.freemarker.settings.number_format=0.##
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=request
spring.freemarker.suffix=.ftl
spring.freemarker.prefer-file-system-access=false
## 静态资源地址配置
spring.global.static-url=http://10.220.50.12:8989/
## Redis配置
spring.redis.database=0
spring.redis.password=8888
spring.redis.jedis.pool.max-active=8
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.max-idle=8
spring.redis.jedis.pool.min-idle=0
spring.redis.timeout=15000ms
spring.redis.sentinel.master=redissentinel
spring.redis.sentinel.nodes=10.220.50.12:46379,10.220.50.13:46380,10.220.50.14:46381
## rabbitmq配置
spring.rabbitmq.host=10.220.50.12
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=8888
# 文件上传节点、下载节点及用户名密码
taiji.file.manage.upload-endpoint=http://10.220.50.11:9001
taiji.file.manage.download-endpoint=http://10.220.50.11:9002
taiji.file.manage.username=admin
taiji.file.manage.password=88888888

#缴费server
pf.server.name=pf-server
wa.config.gateway=/${spring.application.name}